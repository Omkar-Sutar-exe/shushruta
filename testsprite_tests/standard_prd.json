{
  "meta": {
    "project": "Centralized Donor-Recipient-Hospital Management Platform",
    "date": "2025-10-20",
    "prepared_by": "Generated by AI Assistant"
  },
  "product_overview": "This platform is a centralized management system designed to streamline and secure the matching process between organ and blood donors, recipients, and hospitals. It automates compatibility matching using AI, provides real-time updates, and ensures transparent document verification while supporting role-based access for donors, recipients, and hospital admins.",
  "core_goals": [
    "Simplify registration and management for donors, recipients, and hospitals.",
    "Automate donor-recipient matching using medical compatibility and geographic distance.",
    "Deliver real-time notifications and updates across all user roles.",
    "Secure medical document uploads and verification workflows.",
    "Enable hospitals to efficiently manage and monitor donation queues and match statuses."
  ],
  "key_features": [
    "Multi-role user registration and JWT-based secure authentication with role-based access control.",
    "Medical document upload in PDF/image format with cloud storage and admin verification status tracking.",
    "AI-powered donor-recipient matching algorithm factoring organ/blood type, urgency, and distance using Google Maps integration.",
    "Real-time notifications via email (Nodemailer), SMS (Twilio), and web socket updates (Socket.IO).",
    "Hospital admin dashboard with real-time monitoring of donors, recipients, document statuses, and donation queues.",
    "Security features including HTTPS endpoints, AES encryption for sensitive data, and middleware protections (Helmet, rate limiting).",
    "Scalable architecture with modular microservices, Redis-backed background job processing, and cloud deployment support."
  ],
  "user_flow_summary": [
    "User (Donor/Recipient/Hospital) registers and completes profile with required medical and personal info.",
    "User uploads medical reports which are securely stored and await hospital admin verification.",
    "System runs matching algorithm considering compatibility and proximity to generate prioritized matches.",
    "Notifications sent to matched users and hospital dashboards update in real-time to reflect current statuses.",
    "Hospital admins manage donor queues and document approvals via the dashboard.",
    "Users receive status updates, alerts, and can track their donation/match progress through the platform."
  ],
  "validation_criteria": [
    "User registrations must complete with valid data and secure JWT authentication.",
    "Medical document uploads securely stored and verification status accurately reflected.",
    "Matching algorithm correctly prioritizes matches by compatibility and distance.",
    "Notification systems reliably send email, SMS, and real-time updates with >95% delivery success.",
    "Hospital dashboard displays accurate real-time data for active matches, queues, and document states.",
    "All endpoints must enforce HTTPS, data encryption, and role-based access security.",
    "System uptime should exceed 99% with zero data breach incidents.",
    "Performance metrics to confirm reduction of donor-recipient match time by 50% and 100% accuracy in document verification."
  ],
  "code_summary": {
    "tech_stack": [
      "JavaScript",
      "Node.js",
      "Express.js",
      "React",
      "MongoDB",
      "Mongoose",
      "JWT",
      "Multer",
      "Nodemailer",
      "Twilio",
      "Socket.io",
      "Bootstrap",
      "Axios"
    ],
    "features": [
      {
        "name": "Authentication System",
        "description": "Complete user authentication system with signup, signin, admin verification, password reset, and OTP verification",
        "files": [
          "server/routes/auth.js",
          "server/controller/auth.js",
          "server/middleware/auth.js",
          "server/models/users.js",
          "client/src/components/shop/auth"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Authentication API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/isadmin": {
              "post": {
                "summary": "Check if user is admin",
                "responses": {
                  "200": {
                    "description": "Admin status"
                  }
                }
              }
            },
            "/api/signup": {
              "post": {
                "summary": "User registration",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          },
                          "userType": {
                            "type": "string",
                            "enum": [
                              "patient",
                              "hospital"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "/api/signin": {
              "post": {
                "summary": "User login",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "password": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Product Management",
        "description": "Complete product management system with CRUD operations, category filtering, price filtering, reviews, and image upload",
        "files": [
          "server/routes/products.js",
          "server/controller/products.js",
          "server/models/products.js",
          "client/src/components/shop/productDetails",
          "client/src/components/admin/products"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Product Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/product/all-product": {
              "get": {
                "summary": "Get all products"
              }
            },
            "/api/product/product-by-category": {
              "post": {
                "summary": "Get products by category"
              }
            },
            "/api/product/add-product": {
              "post": {
                "summary": "Add new product",
                "requestBody": {
                  "content": {
                    "multipart/form-data": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "pName": {
                            "type": "string"
                          },
                          "pDescription": {
                            "type": "string"
                          },
                          "pPrice": {
                            "type": "number"
                          },
                          "pCategory": {
                            "type": "string"
                          },
                          "pImages": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Order Management",
        "description": "Order processing system with order creation, tracking, status updates, and hospital information management",
        "files": [
          "server/routes/orders.js",
          "server/controller/orders.js",
          "server/models/orders.js",
          "client/src/components/shop/order",
          "client/src/components/admin/orders"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Order Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/order/get-all-orders": {
              "get": {
                "summary": "Get all orders"
              }
            },
            "/api/order/create-order": {
              "post": {
                "summary": "Create new order",
                "requestBody": {
                  "content": {
                    "application/json": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "allProduct": {
                            "type": "array"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "transactionId": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "number"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Category Management",
        "description": "Category management system with CRUD operations and image upload for organ categories",
        "files": [
          "server/routes/categories.js",
          "server/controller/categories.js",
          "server/models/categories.js",
          "client/src/components/admin/categories"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Category Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/category/all-category": {
              "get": {
                "summary": "Get all categories"
              }
            },
            "/api/category/add-category": {
              "post": {
                "summary": "Add new category",
                "requestBody": {
                  "content": {
                    "multipart/form-data": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "cName": {
                            "type": "string"
                          },
                          "cDescription": {
                            "type": "string"
                          },
                          "cImage": {
                            "type": "string",
                            "format": "binary"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "User Management",
        "description": "User management system with profile management, password changes, OTP verification, and forgot password functionality",
        "files": [
          "server/routes/users.js",
          "server/controller/users.js",
          "server/models/users.js",
          "client/src/components/shop/dashboardUser"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "User Management API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/user/all-user": {
              "get": {
                "summary": "Get all users"
              }
            },
            "/api/user/change-password": {
              "post": {
                "summary": "Change user password"
              }
            },
            "/api/user/forgot-password": {
              "post": {
                "summary": "Initiate password reset"
              }
            }
          }
        }
      },
      {
        "name": "Email System",
        "description": "Email functionality with SMTP configuration, test email sending, and password reset emails",
        "files": [
          "server/routes/mail.js",
          "server/config/mailer.js",
          "server/controller/users.js"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Email System API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/mail/test": {
              "get": {
                "summary": "Test email configuration and send test email",
                "parameters": [
                  {
                    "name": "send",
                    "in": "query",
                    "schema": {
                      "type": "boolean"
                    }
                  },
                  {
                    "name": "to",
                    "in": "query",
                    "schema": {
                      "type": "string"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      {
        "name": "Customization System",
        "description": "Admin customization system for managing slide images and dashboard data",
        "files": [
          "server/routes/customize.js",
          "server/controller/customize.js",
          "server/models/customize.js",
          "client/src/components/admin/dashboardAdmin"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Customization API",
            "version": "1.0.0"
          },
          "paths": {
            "/api/customize/get-slide-image": {
              "get": {
                "summary": "Get slide images"
              }
            },
            "/api/customize/upload-slide-image": {
              "post": {
                "summary": "Upload slide image",
                "requestBody": {
                  "content": {
                    "multipart/form-data": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "image": {
                            "type": "string",
                            "format": "binary"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "Frontend Dashboard",
        "description": "React-based frontend with user and admin dashboards, product browsing, shopping cart, and wishlist functionality",
        "files": [
          "client/src/App.js",
          "client/src/components/shop/home",
          "client/src/components/shop/dashboardUser",
          "client/src/components/admin/dashboardAdmin",
          "client/src/components/shop/wishlist"
        ],
        "api_doc": {
          "openapi": "3.0.0",
          "info": {
            "title": "Frontend Dashboard",
            "version": "1.0.0"
          },
          "paths": {
            "/": {
              "get": {
                "summary": "Home page with product listings"
              }
            },
            "/dashboard": {
              "get": {
                "summary": "User dashboard"
              }
            },
            "/admin/dashboard": {
              "get": {
                "summary": "Admin dashboard"
              }
            }
          }
        }
      }
    ]
  }
}
